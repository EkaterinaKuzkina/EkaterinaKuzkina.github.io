{"version":3,"sources":["App.js","panels/Persik.js","index.js","img/persik.png"],"names":["App","platform","react_default","a","createElement","vkui","activePanel","id","React","Component","connect","send","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"wOAqMeA,mCC7LAC,sMD8KP,OACQC,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMC,YAAY,aACdJ,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOE,GAAG,aACNL,EAAAC,EAAAC,cAACC,EAAA,YAAD,gBACAH,EAAAC,EAAAC,cAACC,EAAA,MAAD,KACAH,EAAAC,EAAAC,cAACC,EAAA,IAAD,wBARNG,IAAMC,YE1KxBC,IAAQC,KAAK,eAAgB,IAQ7BC,IAASC,OAAOX,EAAAC,EAAAC,cAACU,EAAD,MAASC,SAASC,eAAe,6BCjBjDC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.d5d3d1d4.chunk.js","sourcesContent":["import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { Div, Group, Panel, PanelHeader, View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\n//import ReactDOM from 'react-dom'\n//import CSVReader from 'react-csv-reader'\n\n//import csv from 'csv';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\n//class App extends React.Component {\n//\tconstructor(props) {\n//\t\tsuper(props);\n//\n//\t\tthis.state = {\n//\t\t\tactivePanel: 'home',\n//\t\t\tfetchedUser: null,\n//\t\t};\n//\t}\n//\n//\tcomponentDidMount() {\n//\t\tconnect.subscribe((e) => {\n//\t\t\tswitch (e.detail.type) {\n//\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n//\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n//\t\t\t\t\tbreak;\n//\t\t\t\tdefault:\n//\t\t\t\t\tconsole.log(e.detail.type);\n//\t\t\t}\n//\t\t});\n//\t\tconnect.send('VKWebAppGetUserInfo', {});\n//\t}\n//\n//\tgo = (e) => {\n//\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n//\t};\n//\n//\trender() {\n//\t\treturn (\n//\t\t\t<View activePanel={this.state.activePanel}>\n//                <Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n//\t\t\t\t<Persik id=\"persik\" go={this.go} />\n//               \n//\t\t\t</View>\n//            \n//\t\t);\n//    }\n//\t\n//}\n//\n\n//export default App;\n\n//function myFunction() {\n//    var data = Papa.parse('kozerog.csv',\n//               {delimiter:',', dynamicTyping:true, skipEmptyLines:true\n//               });\n//    console.log(data)\n//}\n//\n//myFunction()\n\n//var reader = new FileReader();\n//var fileToRead = 'data.csv';\n//\n//// attach event, that will be fired, when read is end\n//reader.addEventListener(\"loadend\", function() {\n//                        // reader.result contains the contents of blob as a typed array\n//                        // we insert content of file in DOM here\n//                        document.getElementById('file').innerText = reader.result;\n//                        });\n//\n//// start reading a loaded file\n//\n//\n//reader.readAsText(fileToRead);\n\n\n//\n\n//var CSVToArray = function ( strData, strDelimiter ){\n//    \n//    strDelimiter = (strDelimiter || \",\");\n//    \n//    var objPattern = new RegExp(\n//                                (\n//                                 \"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\n//                                 \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\n//                                 \"([^\\\"\\\\\" + strDelimiter + \"\\\\r\\\\n]*))\"\n//                                 ),\n//                                \"gi\"\n//                                );\n//    \n//    var arrData = [[]];\n//    var arrMatches = null;\n//    \n//    while (arrMatches = objPattern.exec( strData )){\n//        var strMatchedDelimiter = arrMatches[ 1 ];\n//        if (\n//            strMatchedDelimiter.length &&\n//            strMatchedDelimiter !== strDelimiter\n//            ){\n//            arrData.push( [] );\n//        }\n//        var strMatchedValue;\n//        if (arrMatches[ 2 ]){\n//            strMatchedValue = arrMatches[ 2 ].replace(\n//                                                      new RegExp( \"\\\"\\\"\", \"g\" ),\n//                                                      \"\\\"\"\n//                                                      );\n//        } else {\n//            strMatchedValue = arrMatches[ 3 ];\n//        }\n//        arrData[ arrData.length - 1 ].push( strMatchedValue );\n//    }\n//    console.log(arrData)\n//    return( arrData );\n//}\n//\n//import Papa from 'papaparse'\n//var data =\"data,csv,dhff,jggjf\";\n////CSVToArray(data, \",\");\n//var data_parse = Papa.parse(data);\n//console.log(data_parse)\n\n//\n//Papa.parse(\"file:///Users/ekaterinakuzkina/EkaterinaKuzkina.github.io/horoscope_database/deva.csv\", {\n//           download: true,\n//           step: function(row) {\n//           console.log(\"Row:\", row.data);\n//           },\n//           complete: function() {\n//           console.log(\"All done!\");\n//           }\n//           });\n\n//import { csv } from 'd3-fetch';\n//////import url from '/Users/ekaterinakuzkina/Desktop/data_download/oven.csv';\n////\n//csv(\"http://localhost:10889/new.txt\").then(function(data) {\n//      console.log(data); // [{\"Hello\": \"world\"}, …]\n//      });\n\n\n//var txt = '';\n//var xmlhttp = new XMLHttpRequest();\n//xmlhttp.onreadystatechange = function(){\n//    if(xmlhttp.status == 200 && xmlhttp.readyState == 4){\n//        txt = xmlhttp.responseText;\n//    }\n//};\n//xmlhttp.open(\"GET\",\"https://github.com/EkaterinaKuzkina/EkaterinaKuzkina.github.io/blob/master/horoscope_database/deva.csv\",true);\n//console.log(xmlhttp.send());\n//\n//var fs = require('fs');\n//var textByLine = fs.readFileSync('https://github.com/EkaterinaKuzkina/EkaterinaKuzkina.github.io/blob/master/horoscope_database/deva.csv').toString().split(\"\\n\");\n\n//function readTextFile(file)\n//{\n//    var rawFile = new XMLHttpRequest();\n//    rawFile.open(\"GET\", file, false);\n//    rawFile.onreadystatechange = function ()\n//    {\n//        if(rawFile.readyState === 4)\n//        {\n//            if(rawFile.status === 200 || rawFile.status == 0)\n//            {\n//                var allText = rawFile.responseText;\n//                alert(allText);\n//            }\n//        }\n//    }\n//    rawFile.send(null);\n//}\n//readTextFile(\"file:///Users/ekaterinakuzkina/EkaterinaKuzkina.github.io/new.txt\");\n\nclass App extends React.Component {\n    \n    render() {\n        return (\n                <View activePanel=\"mainPanel\">\n                    <Panel id=\"mainPanel\">\n                        <PanelHeader>Example</PanelHeader>\n                        <Group>\n                        <Div>\n                            Hello\n                        </Div>\n                        </Group>\n                    </Panel>\n                </View>\n                );\n    }\n}\n\nexport default App;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}